@model Pogi.Models.LiveViewModels.LiveScoreViewModel
<br />
@{
    ViewData["Title"] = "Live";
}
<section class="container">
    <section class="row">
        <span class="col-3 px-0 mx-1  d-flex justify-content-center align-items-center">
            <small><strong>@Model.Tour.TourName</strong></small>
        </span>
        <ul class="nav col">
            <li class="nav-item mx-0">
                <a class="nav-link active" href="#">Score</a>
            </li>
            <li class="nav-item mx-0">
                <a class="nav-link" href="#">Leaders</a>
            </li>
            <li class="nav-item mx-0">
                <a class="nav-link" href="#">Groups</a>
            </li>
        </ul>
    </section>
    <section class="row">
        <btn id="prevHole" type="button" class="btn btn-lg col btn-warning text-light text-center py-1 mb-1 border">
            Prev Hole
        </btn>
        <div id="cHole" class="col bg-info text-light text-center py-1 mb-1 border">
            Hole #00
        </div>
        <btn id="nextHole" type="button" class="btn btn-lg col btn-warning text-light text-center py-1 mb-1 border">
            Next Hole
        </btn>
    </section>
    <section class="row align-items-center">
        @*<div class="col text-center py-3 mb-2 bg-primary text-light border-primary rounded">*@
            <button type="button" class="col py-3 mb-2 btn btn-lg btn-primary"><i class="fa fa-minus"></i></button>
        @*</div>*@
        <div class="col text-center py-1 mb-2 bg-secondary text-light border rounded font-weight-bold">
            <p id="parOfHole" class="h6 font-weight-light">Par 04, 350 yards</p>
            <label id="scoreOfHole" class="h3 text-light">99</label>
        </div>
        @*<div class="col text-center py-3 mb-2 bg-primary text-light border rounded">*@
            <button type="button" class="col py-3 mb-2 btn btn-lg btn-primary"><i class="fa fa-plus"></i></button>
        @*</div>*@
    </section>

    <section class="row align-items-center">
        <div id="outh-plyr" class="col-1 text-center text-light bg-dark border border-light px-0">Plyr</div>
        <div id="outh-1" class="outh col-1 text-center text-light bg-dark border border-light px-0">01</div>
        <div id="outh-2" class="outh col-1 text-center text-light bg-dark border border-light px-0">02</div>
        <div id="outh-3" class="outh col-1 text-center text-light bg-dark border border-light px-0">03</div>
        <div id="outh-4" class="outh col-1 text-center text-light bg-dark border border-light px-0">04</div>
        <div id="outh-5" class="outh col-1 text-center text-light bg-dark border border-light px-0">05</div>
        <div id="outh-6" class="outh col-1 text-center text-light bg-dark border border-light px-0">06</div>
        <div id="outh-7" class="outh col-1 text-center text-light bg-dark border border-light px-0">07</div>
        <div id="outh-8" class="outh col-1 text-center text-light bg-dark border border-light px-0">08</div>
        <div id="outh-9" class="outh col-1 text-center text-light bg-dark border border-light px-0">09</div>
        <div id="outh-sum" class="col-1 text-center text-light bg-dark border border-light px-0">Out</div>
        <div id="outh-rnd" aria-atomic="" class="col-1 text-center text-light bg-dark border border-light px-0">Rnd</div>
    </section>

    @{
        int p = 0;
        foreach (Member player in @Model.Players)
        {
            p++;
            string initials = Model.Players[p - 1].FirstName.Substring(0, 1)
            + Model.Players[p - 1].LastName.Substring(0, 1);

            <section class="row align-items-center" id="out@(p)">
                <div id="out@(p)-plyr" class="out@(p)-plyr col-1 text-center text-dark
                 bg-light border border-secondary px-0">@(initials)</div>
                <div id="out@(p)-1" class="out@(p) col-1 text-center text-dark bg-light border border-secondary px-0">
                    @(Model.Scores[p - 1].Hole01)
                </div>
                <div id="out@(p)-2" class="out@(p) col-1 text-center text-dark bg-light border border-secondary px-0">
                    @(Model.Scores[p - 1].Hole02)
                </div>
                <div id="out@(p)-3" class="out@(p) col-1 text-center text-dark bg-light border border-secondary px-0">
                    @(Model.Scores[p - 1].Hole03)
                </div>
                <div id="out@(p)-4" class="out@(p) col-1 text-center text-dark bg-light border border-secondary px-0">
                    @(Model.Scores[p - 1].Hole04)
                </div>
                <div id="out@(p)-5" class="out@(p) col-1 text-center text-dark bg-light border border-secondary px-0">
                    @(Model.Scores[p - 1].Hole05)
                </div>
                <div id="out@(p)-6" class="out@(p) col-1 text-center text-dark bg-light border border-secondary px-0">
                    @(Model.Scores[p - 1].Hole06)
                </div>
                <div id="out@(p)-7" class="out@(p) col-1 text-center text-dark bg-light border border-secondary px-0">
                    @(Model.Scores[p - 1].Hole07)
                </div>
                <div id="out@(p)-8" class="out@(p) col-1 text-center text-dark bg-light border border-secondary px-0">
                    @(Model.Scores[p - 1].Hole08)
                </div>
                <div id="out@(p)-9" class="out@(p) col-1 text-center text-dark bg-light border border-secondary px-0">
                    @(Model.Scores[p - 1].Hole09)
                </div>
                <div id="out@(p)-HoleOut" class="out@(p)-plyr col-1 text-center text-dark bg-light border border-secondary px-0">
                    
                </div>
                <div id="out@(p)-Rnd" class="out@(p)-plyr col-1 text-center text-dark bg-light border border-secondary px-0">
                    +00
                </div>
            </section>
        }
    }
    <section class="row align-items-center">
        <div id="inh-plyr" class="col-1 text-center text-light bg-dark border border-light px-0">Plyr</div>
        <div id="inh-1" class="inh col-1 text-center text-light bg-dark border border-light px-0">10</div>
        <div id="inh-2" class="inh col-1 text-center text-light bg-dark border border-light px-0">11</div>
        <div id="inh-3" class="inh col-1 text-center text-light bg-dark border border-light px-0">12</div>
        <div id="inh-4" class="inh col-1 text-center text-light bg-dark border border-light px-0">13</div>
        <div id="inh-5" class="inh col-1 text-center text-light bg-dark border border-light px-0">14</div>
        <div id="inh-6" class="inh col-1 text-center text-light bg-dark border border-light px-0">15</div>
        <div id="inh-7" class="inh col-1 text-center text-light bg-dark border border-light px-0">16</div>
        <div id="inh-8" class="inh col-1 text-center text-light bg-dark border border-light px-0">17</div>
        <div id="inh-9" class="inh col-1 text-center text-light bg-dark border border-light px-0">18</div>
        <div id="inh-sum" class="col-1 text-center text-light bg-dark border border-light px-0">In</div>
        <div id="inh-tot" class="col-1 text-center text-light bg-dark border border-light px-0">Tot</div>
    </section>
    @{
        p = 0;
        foreach (Member player in @Model.Players)
        {
            p++;
            string initials = Model.Players[p - 1].FirstName.Substring(0, 1)
            + Model.Players[p - 1].LastName.Substring(0, 1);

            <section class="row align-items-center" id="in@(p)">
                <div id="in@(p)-plyr" class="in@(p)-plyr col-1 text-center text-dark
                 bg-light border border-secondary px-0">@(initials)</div>
                <div id="in@(p)-1" class="in@(p) col-1 text-center text-dark bg-light border border-secondary px-0">
                    @(Model.Scores[p - 1].Hole10)
                </div>
                <div id="in@(p)-2" class="in@(p) col-1 text-center text-dark bg-light border border-secondary px-0">
                    @(Model.Scores[p - 1].Hole11)
                </div>
                <div id="in@(p)-3" class="in@(p) col-1 text-center text-dark bg-light border border-secondary px-0">
                    @(Model.Scores[p - 1].Hole12)
                </div>
                <div id="in@(p)-4" class="in@(p) col-1 text-center text-dark bg-light border border-secondary px-0">
                    @(Model.Scores[p - 1].Hole13)
                </div>
                <div id="in@(p)-5" class="in@(p) col-1 text-center text-dark bg-light border border-secondary px-0">
                    @(Model.Scores[p - 1].Hole14)
                </div>
                <div id="in@(p)-6" class="in@(p) col-1 text-center text-dark bg-light border border-secondary px-0">
                    @(Model.Scores[p - 1].Hole15)
                </div>
                <div id="in@(p)-7" class="in@(p) col-1 text-center text-dark bg-light border border-secondary px-0">
                    @(Model.Scores[p - 1].Hole16)
                </div>
                <div id="in@(p)-8" class="in@(p) col-1 text-center text-dark bg-light border border-secondary px-0">
                    @(Model.Scores[p - 1].Hole17)
                </div>
                <div id="in@(p)-9" class="in@(p) col-1 text-center text-dark bg-light border border-secondary px-0">
                    @(Model.Scores[p - 1].Hole18)
                </div>
                <div id="in@(p)-HoleIn" class="in@(p)-plyr col-1 text-center text-dark bg-light border border-secondary px-0">
                   
                </div>
                <div id="in@(p)-Tot" class="in@(p)-plyr col-1 text-center text-dark bg-light border border-secondary px-0">
                    
                </div>
            </section>
        }
    }


    <section class="row btn-group-toggle" data-toggle="buttons">
        @{p = 0; }
        @foreach (Member player in @Model.Players)
        {
            p++;
            <label id="btnP@(p)"class="col btn btn-primary text-light text-center py-2 px-2 mt-2 mx-1 mb-1 border">
                <input type="radio" name="options" id="option1" autocomplete="off" />
                @player.FirstName
            </label>
        }
    </section>

</section>

<section>

    <input type="text" id="par1" value="@Model.Course.Par01" hidden />
    <input type="text" id="par2" value="@Model.Course.Par02" hidden />
    <input type="text" id="par3" value="@Model.Course.Par03" hidden />
    <input type="text" id="par4" value="@Model.Course.Par04" hidden />
    <input type="text" id="par5" value="@Model.Course.Par05" hidden />
    <input type="text" id="par6" value="@Model.Course.Par06" hidden />
    <input type="text" id="par7" value="@Model.Course.Par07" hidden />
    <input type="text" id="par8" value="@Model.Course.Par08" hidden />
    <input type="text" id="par9" value="@Model.Course.Par09" hidden />
    <input type="text" id="par10" value="@Model.Course.Par10" hidden />
    <input type="text" id="par11" value="@Model.Course.Par11" hidden />
    <input type="text" id="par12" value="@Model.Course.Par12" hidden />
    <input type="text" id="par13" value="@Model.Course.Par13" hidden />
    <input type="text" id="par14" value="@Model.Course.Par14" hidden />
    <input type="text" id="par15" value="@Model.Course.Par15" hidden />
    <input type="text" id="par16" value="@Model.Course.Par16" hidden />
    <input type="text" id="par17" value="@Model.Course.Par17" hidden />
    <input type="text" id="par18" value="@Model.Course.Par18" hidden />
    <input type="text" id="pCnt" value="@Model.Scores.Count" hidden />
    <input type-"text" id="tPlayer" name="tPlayer" value="@Model.currPlayer" hidden />
    <input type-"text" id="tHole" name="tHole" value="@Model.nextHole" hidden />

</section>

@section Scripts {

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

<script>

    $(document).ready(function () {
        console.info("Document Ready");
        var pCnt = $("#pCnt").val();
        console.info("There are " + pCnt + " Players");

        var i;
        for (i = 1; i <= pCnt; i++) {
            scoreTotal(i);
        }

        var pOfM = $("#tPlayer").val();
        if (pOfM == "undefined" || pOfM == "") {
            console.info("Defaulting pOfM");
            pOfM = "1";
        }
        console.info("Current Player is " + pOfM);

        var hOfM = $("#tHole").val();
        if (hOfM == "undefined" || hOfM == "") {
            console.info("Defaulting hOfM");
            hOfM = "1";
        }
        console.info("Current Hole is " + hOfM);
        
        $("#btnP1").click(function () {
            console.info("Click event for btnP1");
            toggleRow(1, pCnt);
        });
        $("#btnP2").click(function () {
            console.info("Click event for btnP2");
            toggleRow(2, pCnt);
        });
        $("#btnP3").click(function () {
            console.info("Click event for btnP3");
            toggleRow(3, pCnt);
        });
        $("#btnP4").click(function () {
            console.info("Click event for btnP4");
            toggleRow(4, pCnt);
        });

        $("#prevHole").click(function() {

            var hh = parseInt($("#tHole").val());
            if (hh > 1) {
                hh = hh - 1;
                selectHole(hh);
                setScore(getScoreId());
            }

        });
        $("#nextHole").click(function () {

            var hh = parseInt($("#tHole").val());
            if (hh < 18) {
                hh = hh + 1;
                selectHole(hh);
                setScore(getScoreId());
            }

        });
    
        $("#btnP" + pOfM).trigger("click");
   

        selectHole(hOfM);
        setScore(getScoreId());

    });
        function selectHole(hOfM) {

            $(getScoreId()).removeClass("bg-info");
            $(getScoreId()).addClass("bg-secondary");

            var iH = hOfM;
            console.info("Highlighting Hole " + iH);
            $(".inh").removeClass("bg-info");
            $(".outh").removeClass("bg-info");
            $(".inh").addClass("bg-dark");
            $(".outh").addClass("bg-dark");

            if (iH > 9) {
                var inH = iH - 9;
                var inId = "#inh-" + inH;
                console.info("Toggling inId=" + inId);
                $(inId).removeClass("bg-dark");
                $(inId).addClass("bg-info");
                $("#cHole").text('Hole #' + inH);
            }
            else {
                var outH = iH;
                var outId = "#outh-" + outH 
                console.info("Toggling outId=" + outId);
                $(outId).removeClass("bg-dark");
                $(outId).addClass("bg-info");
                $("#cHole").text("Hole No 0" + outH);
            }
            // get Par of Hole
            var parOfHole = $("#par" + iH).val();
            $("#parOfHole").text("Par " + parOfHole);
            $("#tHole").val(iH);

            $(getScoreId()).removeClass("bg-secondary");
            $(getScoreId()).addClass("bg-info");

        }
        function setScore(scoreId) {

            var score = $(scoreId).text().trim();
            console.info("Setting Score to " + score);
            $("#scoreOfHole").text(score);

        }

        function getScoreId() {

            var pOfM = $("#tPlayer").val();
            var hOfM = $("#tHole").val();
            console.info("Getting Score Id of Player " + pOfM
                + ", Hole " + hOfM);

            var idOfScore;
            if (hOfM > 9) {
                var inH = hOfM - 9;
                idOfScore = "#in" + pOfM + "-" + inH;
            }
            else {
                var outH = hOfM;
                idOfScore = "#out" + pOfM + "-" + outH;
            }
            console.info("Id of Score = " + idOfScore + ", value = " + $(idOfScore).text().trim());
            return idOfScore;
        }   
        function toggleRow(p, pCnt) {

            $(getScoreId()).removeClass("bg-info");

            var y;
            for (y = 1; y <= pCnt; y++) {
                if (y == p) {
                    $(".out"+ y + "-plyr").removeClass("bg-light");
                    $(".out"+ y + "-plyr").removeClass("text-dark");
                    $(".in"+ y + "-plyr").removeClass("bg-light");
                    $(".in" + y + "-plyr").removeClass("text-dark");

                    $(".out"+ y + "-plyr").addClass("bg-info");
                    $(".out"+ y + "-plyr").addClass("text-light");
                    $(".in"+ y + "-plyr").addClass("bg-info");
                    $(".in" + y + "-plyr").addClass("text-light");

                    $(".in" + y).addClass("border-light");
                    $(".out" + y).addClass("border-light");
                    $(".in" + y).removeClass("border-secondary");
                    $(".out" + y).removeClass("border-secondary");

                    $(".in" + y).removeClass("bg-light");
                    $(".out" + y).removeClass("bg-light");
                    $(".in" + y).addClass("bg-secondary");
                    $(".out" + y).addClass("bg-secondary");

                    $(".in" + y).removeClass("text-dark");
                    $(".out" + y).removeClass("text-dark");
                    $(".in" + y).addClass("text-light");
                    $(".out" + y).addClass("text-light");


                }
                else {
                    $(".out"+ y + "-plyr").addClass("bg-light");
                    $(".out"+ y + "-plyr").addClass("text-dark");
                    $(".in"+ y + "-plyr").addClass("bg-light");
                    $(".in" + y + "-plyr").addClass("text-dark");

                    $(".out"+ y + "-plyr").removeClass("bg-info");
                    $(".out"+ y + "-plyr").removeClass("text-light");
                    $(".in"+ y + "-plyr").removeClass("bg-info");
                    $(".in" + y + "-plyr").removeClass("text-light");

                    $(".in" + y).removeClass("border-light");
                    $(".out" + y).removeClass("border-light");
                    $(".in" + y).addClass("border-secondary");
                    $(".out" + y).addClass("border-secondary");

                    $(".in" + y).removeClass("bg-secondary");
                    $(".out" + y).removeClass("bg-secondary");
                    $(".in" + y).addClass("bg-light");
                    $(".out" + y).addClass("bg-light")

                    $(".in" + y).removeClass("text-light");
                    $(".out" + y).removeClass("text-light");
                    $(".in" + y).addClass("text-dark");
                    $(".out" + y).addClass("text-dark");

                }
            }
            $("#tPlayer").val(p);

            $(getScoreId()).removeClass("bg-secondary");
            $(getScoreId()).addClass("bg-info");

        }
        function scoreTotal(p) {


            console.info("Computing Totals for Player " + p)

            var pars = new Array(18);
            var x;
            for (x = 1; x <= 18; x++) {
                pars[x] = $("#par" + x).val();
            }

            var totOut = 0;
            var rnd = 0;
            var hole = 0;
            $(".out" + p).each(function () {
                hole++;
                var holeScore = parseInt($(this).text());
                totOut = totOut + holeScore;
                if (holeScore > 0) {
                    rnd = rnd + holeScore - pars[hole];
                }
            });
            console.info("Player " + p + " Out: " + totOut);

            var totIn = 0;
            $(".in" + p).each(function () {
                hole++;
                var holeScore = parseInt($(this).text());
                totIn = totIn + holeScore;
                if (holeScore > 0) {
                    rnd = rnd + holeScore - pars[hole];
                }
            });
            console.info("Player " + p + " In: " + totIn);

            var total = totOut + totIn;
            console.info("Player " + p + " Rnd: " + rnd);
            console.info("Player " + p + " Total: " + total);

            var rndSign = "";
            if (rnd > 0) {
                rndSign = "+";
            }
            else if (rnd < 0) {
                rndSign = "-";
            }
            $("#out" + p + "-HoleOut").text(totOut);
            $("#out" + p + "-Rnd").text(rndSign+rnd);
            $("#in" + p + "-HoleIn").text(totIn);
            $("#in" + p + "-Tot").text(total);
        }

</script>

}
