@using Microsoft.AspNetCore.Http
@model IEnumerable<Pogi.Entities.Member>
@inject UserManager<ApplicationUser> userManager
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor httpContextAccessor

@{
    ViewData["Title"] = "Index";
    Microsoft.AspNetCore.Http.ISession _session = httpContextAccessor.HttpContext.Session;
    var search = _session.GetString("SearchMemberName");
}
<br />
<div class="container">
    <h2>Manage Members</h2>
    <h4>Directory</h4>
    <hr />
    <div class="container-fluid ">
        <form asp-action="Index">
            <div class="row">
                <div class="col-md-2">
                    @if (User.IsInRole("AdminRoot") || User.IsInRole("AdminCourse"))
                    {
                        <a asp-action="Create">Create New</a>
                    }
                    else
                    {
                        <span class="text-primary">Display Only</span>

                    }
                </div>
                <div class="col-md-4 form-group pull-right">
                    <input name="search" class="form-control" type="text" placeholder="Search LastName or FirstName" value="@search">
                </div>
            </div>
            @foreach (var item in Model)
            {

                <hr />
                <div class="row">
                    <div class="alert-info col-md-2">
                        Name
                    </div>
                    <div class="col-md-4">
                        @(Html.DisplayFor(modelItem => item.LastName)),
                        @(Html.DisplayFor(modelItem => item.FirstName))

                    </div>
                    <div class="alert-info col-md-2">
                        @Html.DisplayNameFor(model => model.MaritalStatus)
                    </div>
                    <div class="col-md-4">
                        @(Html.DisplayFor(modelItem => item.MaritalStatus))
                    </div>
                </div>
                <div class="row">
                    <div class="alert-info col-md-2">
                        @Html.DisplayNameFor(model => model.Phone1st)
                    </div>
                    <div class="col-md-4">
                        @(Html.DisplayFor(modelItem => item.Phone1st))
                        @(Html.DisplayFor(modelItem => item.Phone1stType))
                    </div>
                    <div class="alert-info col-md-2">
                        @Html.DisplayNameFor(model => model.Phone2nd)
                    </div>
                    <div class="col-md-4">
                        @(Html.DisplayFor(modelItem => item.Phone2nd))
                        @(Html.DisplayFor(modelItem => item.Phone2ndType))
                    </div>
                </div>
                <div class="row">
                    <div class="alert-info col-md-2">
                        Email Addresses
                    </div>
                    <div class="col-md-4">
                        @(Html.DisplayFor(modelItem => item.EmailAddr1st))
                        @(Html.DisplayFor(modelItem => item.EmailAddr2nd))
                    </div>
                    <div class="alert-info col-md-2">
                        Member Status
                    </div>
                    <div class="col-md-4">
                        @(Html.DisplayFor(modelItem => item.RecordStatus)) /
                        @(Html.DisplayFor(modelItem => item.MemberStatus))
                    </div>
                </div>
                <div class="row">
                    <div class="alert-info col-md-2">
                        Address
                    </div>
                    <div class="col-md-9">
                        @Html.DisplayFor(modelItem => item.Street)
                        @Html.DisplayFor(modelItem => item.City),
                        @Html.DisplayFor(modelItem => item.State)
                        @Html.DisplayFor(modelItem => item.Zip)
                        @Html.DisplayFor(modelItem => item.Country)
                    </div>
                </div>
                <div class="row">
                    <div class="alert-info col-md-2">
                        @Html.DisplayNameFor(model => model.Profession)
                    </div>
                    <div class="col-md-4">
                        @Html.DisplayFor(modelItem => item.Profession)
                    </div>
                    <div class="alert-info col-md-2">
                        GHIN / Handicap
                    </div>
                    <div class="col-md-4">
                        @(Html.DisplayFor(modelItem => item.GhinNumber)) /
                        @(Html.DisplayFor(modelItem => item.CurrHandicap))
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-2">

                    </div>
                    @if (User.IsInRole("AdminRoot") || User.IsInRole("AdminUser"))
                    {
                        <div class="col-md-10">
                            <a data-toggle="tooltip" title="Edit Member" asp-action="Edit" asp-route-id="@item.MemberId">&#x270f;</a>&nbsp;|&nbsp;
                            <a data-toggle="tooltip" title="Edit Profile" asp-controller="Profile" asp-action="Edit" asp-route-id="@item.MemberId" class="fa fa-user"></a>&nbsp;| &nbsp;
                            @*<a asp-action="Details" asp-route-id="@item.MemberId">Details</a> |*@
                            <a data-toggle="tooltip" title="Maintain Handicap" asp-controller="Handicap" asp-action="Index" asp-route-id="@item.MemberId" class="fa fa-wheelchair"></a>&nbsp;| &nbsp;
                            <a data-toggle="tooltip" title="Delete Member" asp-action="Delete" asp-route-id="@item.MemberId" class="fa fa-trash"></a>
                        </div>
                    }
                </div>

            }
        </form>
    </div>

</div>


